install.packages("DBI")
install.packages("RSQLite")
install.packages("tidyquant")
y
library(DBI)
library(RSQLite)
db_path <- "financial_data.sqlite"
conn <- dbConnect(QSLite(), db_path)
conn <- dbConnect(SQLite(), db_path)
print(conn)
library(tidyquant)
index_data <- tq_get("^GDAXI", from = "2020-01-01", to = "2023-12-31")
View(index_data)
remove.packages(DBI)
remove.packages("DBI")
install.packages("DBI")
remove.packages("DBI")
install.packages("DBI")
install.packages("DBI")
library(DBI)
dbWriteTable(conn,"dax_data",stock_data,overwrite=TRUE)
#Store data in SQLite database
dbWriteTable(conn,"dax_data",index_data,overwrite=TRUE)
library(DBI)
library(RSQLite)
db_path <- "financial_data.sqlite"
conn <- dbConnect(SQLite(), db_path)
print(conn)
dbWriteTable(conn,"dax_data",index_data,overwrite=TRUE)
install.packages("DBI")
library(zoo)
rolling_window <- 30
#Calculate rolling correaltions
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(X) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(cbind(`^GDAXI`, `^DJI`), rolling_window, function(X) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
library(tidyverse)
rolling_window <- 30
#Calculate rolling correaltions
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(X) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(cbind(`^GDAXI`, `^DJI`), rolling_window, function(X) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
indices_data <- dbGetQuery(conn,"
SELECT symbol, date, close
FROM indices_data
WHERE symbol IN ('^GDAXI', '^GSPC', '^FTSE', '^IXIC')
ORDER BY DATE")
indices_data <- dbGetQuery(conn,"
SELECT symbol, date, close
FROM indices_data
WHERE symbol IN ('^GDAXI', '^GSPC', '^FTSE', '^IXIC')
ORDER BY DATE")
library(DBI)
library(RSQLite)
#Creating connection to a new SQLite database
db_path <- "financial_data.sqlite"
conn <- dbConnect(SQLite(), db_path)
print(conn)
library(dplyr)
library(tidyr)
library(lubridate)
library(zoo)
indices_data <- dbGetQuery(conn,"
SELECT symbol, date, close
FROM indices_data
WHERE symbol IN ('^GDAXI', '^GSPC', '^FTSE', '^IXIC')
ORDER BY DATE")
##Convert date, close and calcualte returns
indices_data <- indices_data %>%
mutate(date = as.Date(date),
close = as.numeric(close))%>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = (close / lag(close)) - 1) %>%
na.omit()
#Pivor to wide
returns_wide <- indices_data %>%
select(symbol, date, return) %>%
pivot_wider(names_from = symbol, values_from = return) %>%
na.omit()
rolling_window <- 30
#Calculate rolling correaltions
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(X) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(cbind(`^GDAXI`, `^DJI`), rolling_window, function(X) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
rolling_window <- 30
#Calculate rolling correaltions
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(cbind(`^GDAXI`, `^DJI`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
indices_data["^GDAXI"]
View(indices_data)
View(returns_wide)
returns_wide["^GDAXI"]
returns_wide[,1]
returns_wide[,2]
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(cbind(`^GDAXI`, `^DJI`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
returns_wide[,2]
returns_wide[,3]
returns_wide[,4]
returns_wide[,5]
returns_wide[,6]
indices_data <- dbGetQuery(conn,"
SELECT symbol, date, close
FROM indices_data
WHERE symbol IN ('^GDAXI', '^GSPC', '^FTSE', '^DJI')
ORDER BY DATE")
##Convert date, close and calcualte returns
indices_data <- indices_data %>%
mutate(date = as.Date(date),
close = as.numeric(close))%>%
group_by(symbol) %>%
arrange(date) %>%
mutate(return = (close / lag(close)) - 1) %>%
na.omit()
#Pivor to wide
returns_wide <- indices_data %>%
select(symbol, date, return) %>%
pivot_wider(names_from = symbol, values_from = return) %>%
na.omit()
#Calculating rolling correlations
#Define rolling window size
rolling_window <- 30
#Calculate rolling correaltions
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(cbind(`^GDAXI`, `^DJI`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
View(returns_wide)
View(returns_wide)
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
)
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind(`^GDAXI`, `^GSPC`), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
View(returns_wide)
View(returns_wide)
cbind(returns_wide["^GDAXI"],returns_wide["^GSPC"])
a=cbind(returns_wide[`^GDAXI`],returns_wide[`^GSPC`])
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(cbind("^GDAXI", "^GSPC"), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(cbind("^GDAXI", "^DJI"), rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
View(returns_wide)
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(returns_wide[, c("^GDAXI", "^GSPC")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(returns_wide[, c("^GDAXI", "^GSPC")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(data=returns_wide[, c("^GDAXI", "^GSPC")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA),
corr_dax_dji = rollapplyr(data=returns_wide[, c("^GDAXI", "^GSPC")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),fill=NA)
)
returns_wide[, c("^GDAXI", "^GSPC")]
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(data=returns_wide[, c("^GDAXI", "^GSPC")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),by.column = FALSE,fill=NA),
corr_dax_dji = rollapplyr(data=returns_wide[, c("^GDAXI", "^GSPC")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),by.column = FALSE,fill=NA)
)
View(returns_wide)
returns_wide["^GDAXI"](1:30)
returns_wide["^GDAXI"]
returns_wide["^GDAXI"][1:30]
returns_wide["^GDAXI"][,1:30]
returns_wide["^GDAXI"][1:30,]
corr(returns_wide["^GDAXI"][1:30,],returns_wide["^GSPC"][1:30,])
cor(returns_wide["^GDAXI"][1:30,],returns_wide["^GSPC"][1:30,])
cor(returns_wide["^GDAXI"][2:31,],returns_wide["^GSPC"][2:31,])
correlations <- retunrs_wide %>%
select(date, corr_dax_sp500, corr_dax_dji ) %>%
pivot longer(-date, names_to = "pair", values_to = "correaltions")
correlations <- retunrs_wide %>%
select(date, corr_dax_sp500, corr_dax_dji ) %>%
pivot_longer(-date, names_to = "pair", values_to = "correaltions")
correlations <- returns_wide %>%
select(date, corr_dax_sp500, corr_dax_dji ) %>%
pivot_longer(-date, names_to = "pair", values_to = "correaltions")
View(correlations)
correlations <- returns_wide %>%
select(date, corr_dax_sp500, corr_dax_dji ) %>%
pivot_longer(-date, names_to = "pair", values_to = "correaltions")%>%
filter(date>=as.Date("2020-02-14"))
View(correlations)
ggplot(correlations, aes(x = date, y = correlation, color = pair)) +
geom_line(size = 1) +
labs(
title = "Rolling Correlations Between Index Pairs",
subtitle = "30-Day Rolling Window",
x = "Date",
y = "Correlation",
color = "Index Pair"
) +
theme_minimal() +
scale_color_manual(values = c("corr_dax_sp500" = "blue",
"corr_ftse_nasdaq" = "red"))
ggplot(correlations, aes(x = date, y = correlations, color = pair)) +
geom_line(size = 1) +
labs(
title = "Rolling Correlations Between Index Pairs",
subtitle = "30-Day Rolling Window",
x = "Date",
y = "Correlation",
color = "Index Pair"
) +
theme_minimal() +
scale_color_manual(values = c("corr_dax_sp500" = "blue",
"corr_ftse_nasdaq" = "red"))
View(correlations)
correlations <- returns_wide %>%
select(date, corr_dax_sp500, corr_dax_dji ) %>%
pivot_longer(-date, names_to = "pair", values_to = "correlations")%>%
filter(date>=as.Date("2020-02-14"))
#Plot
ggplot(correlations, aes(x = date, y = correlations, color = pair)) +
geom_line(size = 1) +
labs(
title = "Rolling Correlations Between Index Pairs",
subtitle = "30-Day Rolling Window",
x = "Date",
y = "Correlation",
color = "Index Pair"
) +
theme_minimal() +
scale_color_manual(values = c("corr_dax_sp500" = "blue",
"corr_ftse_nasdaq" = "red"))
ggplot(correlations, aes(x = date, y = correlations, color = pair)) +
geom_line(size = 1) +
labs(
title = "Rolling Correlations Between Index Pairs",
subtitle = "30-Day Rolling Window",
x = "Date",
y = "Correlation",
color = "Index Pair"
) +
theme_minimal() +
scale_color_manual(values = c("corr_dax_sp500" = "blue",
"corr_dax_dji" = "red"))
returns_wide <- returns_wide %>%
mutate(
corr_dax_sp500 = rollapplyr(data=returns_wide[, c("^GDAXI", "^GSPC")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),by.column = FALSE,fill=NA),
corr_dax_dji = rollapplyr(data=returns_wide[, c("^GDAXI", "^DJI")], rolling_window, function(x) cor(x[,1], x[,2], use = "complete.obs"),by.column = FALSE,fill=NA)
)
##Visualize
#Pivor long
correlations <- returns_wide %>%
select(date, corr_dax_sp500, corr_dax_dji ) %>%
pivot_longer(-date, names_to = "pair", values_to = "correlations")%>%
filter(date>=as.Date("2020-02-14"))
#Plot
ggplot(correlations, aes(x = date, y = correlations, color = pair)) +
geom_line(size = 1) +
labs(
title = "Rolling Correlations Between Index Pairs",
subtitle = "30-Day Rolling Window",
x = "Date",
y = "Correlation",
color = "Index Pair"
) +
theme_minimal() +
scale_color_manual(values = c("corr_dax_sp500" = "blue",
"corr_dax_dji" = "red"))
library(plotly)
ggplotly()
ggplotly()
ggsave("rolling_correlations.png", width = 10, height = 6)
